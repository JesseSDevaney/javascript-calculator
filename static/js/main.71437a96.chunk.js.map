{"version":3,"sources":["ButtonContainer.js","InputContainer.js","Display.js","History.js","Tooltip.js","App.js","index.js"],"names":["DESKTOP_BUTTONS","MOBILE_MENU_BUTTONS","MOBILE_ALT_MENU_BUTTONS","ButtonContainer","props","altMenuToggled","expression","isMobile","sendButtonPress","buttons","getButtons","style","gridClass","getButtonGridClass","getContainerHeight","className","Object","keys","map","buttonId","hasOwnProperty","buttonText","displayText","aria-hidden","id","button-text","onClick","e","displayButtons","InputContainer","cursorIndex","handleChange","isInputUnfocused","input","updateFocus","type","value","onChange","onFocus","onBlur","displayInput","unfocusedInput","beforeCursor","slice","afterCursor","displayUnfocusedInput","Display","calculation","isMalformed","result","restorePrevious","toggleTooltip","resultDisplay","toString","displayResult","History","history","useEffect","scrollToBottom","findCalculationById","calculationId","numId","parseInt","filter","historyContainer","document","getElementById","scrollTop","scrollHeight","restoreExpression","event","currentTarget","attributes","nodeValue","replace","error","console","restoreResult","previousCalculations","classNames","data-id","displayCalculation","Tooltip","evaluate","DEFAULT_CALCULATION","App","state","calculationCount","isTooltipToggled","variables","handleButtonPress","bind","handleFocusedInput","handleUnfocusedInput","setMobile","addEventListener","this","mediaQuery","window","matchMedia","removeEventListener","setState","variablesAfter","assign","obj1","obj2","obj1Keys","obj2Keys","length","objKey","isDifferent","updateVariables","format","precision","submitResult","throwMalformedError","prevState","pop","newExpression","getPreviousCalculation","clearMemory","updateCursorIndex","updateExpression","executeExpression","toggleMenu","target","key","activeElement","blur","resultStr","includes","shouldCaptureKey","matches","oldCalculation","calculationUpdate","updateHistory","selectionStart","newHistory","push","shift","React","Component","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.71437a96.chunk.js","sourcesContent":["import \"./ButtonContainer.scss\";\n\nconst DESKTOP_BUTTONS = {\n  \"zero\": \"0\",\n  \"one\": \"1\",\n  \"two\": \"2\",\n  \"three\": \"3\",\n  \"four\": \"4\",\n  \"five\": \"5\",\n  \"six\": \"6\",\n  \"seven\": \"7\",\n  \"eight\": \"8\",\n  \"nine\": \"9\",\n  \"decimal\": \".\",\n  \"add\": \"+\",\n  \"subtract\": \"-\",\n  \"divide\": \"/\",\n  \"multiply\": \"*\",\n  \"back\": \"Back\",\n  \"clear\": \"C\",\n  \"left-parenthesis\": \"(\",\n  \"right-parenthesis\": \")\",\n  \"exponential\": \"^\",\n  \"sqrt\": \"sqrt\",\n  \"equals\": \"=\",\n  \"evaluate\": \"Evaluate\"\n}\n\nconst MOBILE_MENU_BUTTONS = {\n    \"zero\": \"0\",\n    \"one\": \"1\",\n    \"two\": \"2\",\n    \"three\": \"3\",\n    \"four\": \"4\",\n    \"five\": \"5\",\n    \"six\": \"6\",\n    \"seven\": \"7\",\n    \"eight\": \"8\",\n    \"nine\": \"9\",\n    \"decimal\": \".\",\n    \"add\": \"+\",\n    \"subtract\": \"-\",\n    \"divide\": \"/\",\n    \"multiply\": \"*\",\n    \"clear\": \"C\",\n    \"back\": \"Back\",\n    \"exponential\": \"^\",\n    \"equals\": \"=\",\n    \"evaluate\": \"Evaluate\",\n    \"alt\": \"alt\",\n}\n\nconst MOBILE_ALT_MENU_BUTTONS = {\n  \"evaluate\": \"Evaluate\",\n  \"menu\": \"menu\",\n  \"left-parenthesis\": \"(\",\n  \"right-parenthesis\": \")\",\n  \"sqrt\": \"sqrt\",\n  \"u\": \"u\",\n  \"v\": \"v\",\n  \"x\": \"x\",\n  \"y\": \"z\"\n}\n\n\nexport function ButtonContainer(props) {\n  const { altMenuToggled, expression, isMobile, sendButtonPress } = props;\n\n  const getButtons = (altMenuToggled, isMobile) => {\n    if(!isMobile){\n      return DESKTOP_BUTTONS;\n    } else if (altMenuToggled) {\n      return MOBILE_ALT_MENU_BUTTONS;\n    } else {\n      return MOBILE_MENU_BUTTONS;\n    }\n  }\n\n  const getButtonGridClass = (altMenuToggled, isMobile) => {\n    if(!isMobile){\n      return 'desktop-grid';\n    } else if (altMenuToggled) {\n      return 'mobile-alt-menu-grid';\n    } else {\n      return 'mobile-menu-grid';\n    }\n  };\n\n  const getContainerHeight = (altMenuToggled, isMobile) => {\n    if(!isMobile){\n      return '60%';\n    } else if (altMenuToggled) {\n      return '41.6%';\n    } else {\n      return '80%';\n    }\n  };\n\n  const displayButtons = (buttons) => {\n    const buttonIds = Object.keys(buttons);\n\n    return buttonIds.map(buttonId => {\n        if(buttons.hasOwnProperty(buttonId)){\n          let buttonText = buttons[buttonId];\n          let displayText = \"\";\n\n          if(buttonId === \"clear\" && expression === \"\"){\n            buttonId = \"all-clear\";\n            buttonText = \"AC\";\n          }\n\n          switch(buttonId) {\n            case \"divide\":\n              displayText = <>&#247;</>;\n              break;\n            case \"multiply\":\n              displayText = <>&times;</>;\n              break;\n            case \"subtract\":\n              displayText = <>&minus;</>;\n              break;\n            case \"exponential\":\n              displayText = <><pre>x<sup>n</sup></pre></>;\n              break;\n            case \"sqrt\":\n              displayText = <>&radic;</>;\n              break;\n            case \"back\":\n              displayText = <i className=\"fa fa-angle-double-left\" aria-hidden=\"true\"></i>;\n              break;\n            case \"all-clear\":\n              displayText = <i className=\"fa fa-trash-o\" aria-hidden=\"true\"></i>;\n              break;\n            default:\n              displayText = buttonText;\n              break;\n          }\n\n          return (\n            <button \n              className=\"calculatorButton\"\n              id={buttonId} \n              key={buttonId}\n              button-text={buttonText}\n              onClick={(e) => sendButtonPress(buttonId, buttonText)}>\n                {displayText}\n              </button>\n          );\n        }\n\n        return null;\n      });\n  };\n\n  const buttons = getButtons(altMenuToggled, isMobile);\n  const style = {};\n  const gridClass = getButtonGridClass(altMenuToggled, isMobile);\n  style[\"height\"] = getContainerHeight(altMenuToggled, isMobile);\n\n  return (\n    <div className={\"button-container \" + gridClass} style={style}>\n      {displayButtons(buttons)}\n    </div>\n  );\n}\n\nexport default ButtonContainer;","import \"./InputContainer.scss\";\n\nexport default function InputContainer(props){\n    const { \n        cursorIndex, \n        expression, \n        handleChange,\n        isInputUnfocused,\n        updateFocus \n    } = props;\n\n    function displayInput(expression, isInputUnfocused, \n                          handleChange, updateFocus){\n        const style = {};\n\n        if (isInputUnfocused){\n            style[\"opacity\"] = 0;\n        }\n\n        return (\n            <input \n                style={style}\n                type=\"text\" \n                id=\"input\"\n                value={expression} \n                onChange={handleChange} \n                onFocus={updateFocus}\n                onBlur={updateFocus}\n            />\n        );\n    }\n\n    function displayUnfocusedInput(expression, cursorIndex){\n            \n            const beforeCursor = expression.slice(0, cursorIndex);\n            const afterCursor = expression.slice(cursorIndex);\n\n        return (\n            <div id=\"unfocused-input-display\">\n                <pre>\n                    {beforeCursor}\n                    <span id=\"cursor\">|</span>\n                    {afterCursor}\n                </pre>\n            </div>\n        );\n    }\n\n    const input = displayInput(expression, isInputUnfocused, \n                               handleChange, updateFocus);\n    const unfocusedInput = displayUnfocusedInput(expression, cursorIndex);\n\n    return (\n        <div id=\"input-container\">\n            {input}\n            {isInputUnfocused && unfocusedInput}\n        </div>\n    );\n}\n","import './Display.scss';\nimport InputContainer from \"./InputContainer\";\n\nexport default function Display(props){\n    const { expression, isMalformed, result } = props.calculation;\n    const {\n        cursorIndex, \n        handleChange, \n        isInputUnfocused,\n        restorePrevious,\n        toggleTooltip,\n        updateFocus\n    } = props;\n\n    function displayResult(expression, result){\n\n        function restoreExpression(){\n            restorePrevious(expression);\n        }\n\n        function restoreResult(){\n            restorePrevious(result.toString());\n        }\n\n        return (\n            <div className=\"result-container\">\n                <div className=\"expression\" onClick={restoreExpression}><p>{expression}</p></div>\n                <div className=\"equals\">=</div>\n                <div className=\"result\" onClick={restoreResult}><p>{result}</p></div>\n            </div>\n        );\n    }\n\n    const resultDisplay = displayResult(expression, result);\n\n    return (\n        <div id=\"display\">\n            <p id=\"display-title\">Display</p>\n            <button id=\"display-tooltip\" onClick={toggleTooltip}><i className=\"fa fa-info\" aria-hidden=\"true\"></i></button>\n            {result === \"\" && \n                <InputContainer \n                    cursorIndex={cursorIndex}\n                    expression={expression}\n                    isInputUnfocused={isInputUnfocused}\n                    isMalformed={isMalformed}\n                    handleChange={handleChange}\n                    updateFocus={updateFocus}\n                 />\n            }\n            {isMalformed && <pre id=\"malformed-expression\">Malformed expression</pre>}\n            {result !== \"\" && resultDisplay}\n        </div>\n    );\n}","import { useEffect } from \"react\";\nimport \"./History.scss\";\n\nexport default function History(props) {\n  const { altMenuToggled, history, isMobile, restorePrevious } = props;\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [history]);\n\n  useEffect(() => {\n    if(altMenuToggled){\n      scrollToBottom();\n    }\n  }, [altMenuToggled]);\n\n  const displayCalculation = ({id, expression, result}, isMobile) => {\n    let classNames = \"result-container\";\n\n    if(isMobile){\n      classNames += \" result-container-mobile\";\n    } else {\n      classNames += \" result-container-desktop\";\n    }\n\n    return (\n        <div className={classNames} key={id}>\n            <div className=\"expression\" data-id={\"calculation\"+id} onClick={restoreExpression}><p>{expression}</p></div>\n            <div className=\"equals\">=</div>\n            <div className=\"result\" data-id={\"calculation\"+id} onClick={restoreResult}><p>{result}</p></div>\n        </div>\n    );\n  }\n\n  const findCalculationById = (calculationId) => {\n    const numId = parseInt(calculationId, 10);\n    const calculation = history.filter(({ id }) => numId === id);\n    return calculation[0];\n  }\n\n  const scrollToBottom = () => {\n    const historyContainer = document.getElementById(\"history-container\");\n    historyContainer.scrollTop = historyContainer.scrollHeight;\n  }\n\n  const restoreExpression = (event) => {\n    try {\n      const id = event.currentTarget.attributes[\"data-id\"].nodeValue.replace(\"calculation\", \"\");\n      const { expression } = findCalculationById(id);\n      restorePrevious(expression);\n    }\n    catch(error) {\n      console.error(error);\n    }\n  }\n\n  const restoreResult = (event) => {\n    try {\n      const id = event.currentTarget.attributes[\"data-id\"].nodeValue.replace(\"calculation\", \"\");\n      const { result } = findCalculationById(id)\n      restorePrevious(result.toString());\n    }\n    catch(error) {\n      console.error(error);\n    }\n  }\n\n  const previousCalculations = history.map((calculation) => displayCalculation(calculation, isMobile));\n\n  const style = {};\n\n  if(!isMobile){\n    style[\"order\"] = \"-1\";\n    style[\"height\"] = \"20%\";\n  } else if(altMenuToggled) {\n    style[\"order\"] = \"2\";\n    style[\"height\"] = \"38.4%\";\n  } else {\n    style[\"display\"] = \"none\";\n  }\n\n  return (\n    <div id=\"history-container\" style={style}>\n      {previousCalculations}\n    </div>\n  );\n}","import \"./Tooltip.scss\";\n\nexport function Tooltip(props){\n  const evaluate = <i className=\"fa fa-long-arrow-right\" aria-hidden=\"true\"></i>;\n\n  return (\n    <div id=\"tooltip\">\n      <button id=\"close-tooltip\" onClick={props.toggleTooltip}><i className=\"fa fa-times\" aria-hidden=\"true\"></i></button>\n      <div className=\"tip\">\n        <h2>What does Evaluate do?</h2>\n        <div className=\"example\">\n          <p>Evaluate executes the expression in the display.</p>\n          <p>In what follows, we will use <code>{evaluate}</code> to mean evaluate</p>\n          <pre>4^2 {evaluate} 16</pre>\n        </div>\n      </div>\n      <div className=\"tip\">\n        <h2>What is the equals sign for?</h2>\n        <p>The equals sign is not used to evaluate an expression. It is used for:</p>\n        <div className=\"example\">\n          <h3>Variable Assignment</h3>\n          <pre>x=7 {evaluate} 7</pre>\n          <p>Now we have a variable stored in memory with x set to 7. Therefore,</p>\n          <pre>x+4 {evaluate} 11</pre>\n        </div>\n        <div className=\"example\">\n          <h3>Equality Comparison</h3>\n          <pre>7+3*4 == 7+12 {evaluate} true (1)</pre>\n          <pre>3^3 == 2*3+35 {evaluate} false (0)</pre>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Tooltip;","import React from \"react\";\nimport { evaluate, format } from 'mathjs';\nimport './App.scss';\nimport ButtonContainer from './ButtonContainer';\nimport Display from './Display';\nimport History from './History';\nimport Tooltip from './Tooltip';\n\nconst DEFAULT_CALCULATION = {\n  expression: \"\",\n  isMalformed: false,\n  result: \"\"\n}\n\nconst isDifferent = (obj1, obj2) => {\n  const obj1Keys = Object.keys(obj1);\n  const obj2Keys = Object.keys(obj2);\n\n  if (obj1Keys.length !== obj2Keys.length) {\n    return true;\n  }\n\n  for (let objKey of obj1Keys) {\n    if (obj1[objKey] !== obj2[objKey]) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nconst shouldCaptureKey = (key) => {\n  const ignoreList = [\"Shift\", \"CapsLock\", \"Control\", \"Alt\", \"Tab\", \"F1\",\n  \"F2\", \"F3\", \"F4\", \"F5\", \"F6\", \"F7\", \"F8\", \"F9\", \"F10\",\n  \"F11\", \"F12\", \"Insert\", \"PageDown\", \"PageUp\", \"Pause\", \"ScrollLock\", \"NumLock\", \"Escape\",\n  \"ArrowDown\", \"ArrowUp\"];\n\n  return !ignoreList.includes(key);\n}\n\n\nclass App extends React.Component {\n  constructor(){\n    super();\n    this.state = {\n      altMenuToggled: false,\n      calculation: DEFAULT_CALCULATION,\n      calculationCount: 0,\n      cursorIndex: 0,\n      isTooltipToggled: false,\n      history: [],\n      isInputUnfocused: true,\n      isMobile: false,\n      variables: {},\n    };\n\n    this.handleButtonPress = this.handleButtonPress.bind(this);\n    this.handleFocusedInput = this.handleFocusedInput.bind(this);\n    this.handleUnfocusedInput = this.handleUnfocusedInput.bind(this);\n    this.restorePrevious = this.restorePrevious.bind(this);\n    this.setMobile = this.setMobile.bind(this);\n    this.toggleTooltip = this.toggleTooltip.bind(this);\n    this.updateFocus = this.updateFocus.bind(this);\n  }\n\n  componentDidMount(){\n    document.addEventListener(\"keydown\", this.handleUnfocusedInput);\n    this.mediaQuery = window.matchMedia(\"(max-width: 600px)\");\n    this.setMobile(this.mediaQuery);\n    this.mediaQuery.addEventListener(\"change\", this.setMobile);\n  }\n\n  componentWillUnmount(){\n    document.removeEventListener(\"keydown\", this.handleUnfocusedInput);\n    this.mediaQuery.removeEventListener(\"change\", this.setMobile);\n  }\n\n  clearMemory(){\n    this.setState({\n      calculation: DEFAULT_CALCULATION,\n      calculationCount: 0,\n      cursorIndex: 0,\n      history: [],\n      variables: {}\n    });\n  }\n\n  executeExpression(){\n    const { calculation: {expression}, variables } = this.state;\n    let result = \"\";\n    const variablesAfter = Object.assign({}, variables);\n\n    if (expression !== \"\"){\n      try {\n        result = evaluate(expression, variablesAfter);\n        if (isDifferent(variables, variablesAfter)){\n          this.updateVariables(variablesAfter);\n        }\n\n        if (typeof result === \"object\" && result !== null){\n          result = format(result, {precision: 14});\n        }\n        this.submitResult(result.toString());\n      }\n      catch (error) {\n        console.error(error);\n        this.throwMalformedError();\n      }\n    }\n  }\n\n  getPreviousCalculation(){\n    this.setState(prevState => {\n      const { calculation: { result }, history } = prevState;\n\n      if (result === \"\" && history.length !== 0){\n        let { expression, result } = history.slice().pop();\n        let newCalculation = {\n          expression,\n          isMalformed: false,\n          result\n        };\n        return {calculation: newCalculation};\n      }\n    })\n  }\n\n  handleButtonPress(buttonId, buttonText){\n    const { calculation: { expression, result } } = this.state;\n    let newExpression = \"\";\n\n    switch(buttonId){\n      case \"back\":\n        this.getPreviousCalculation();\n        break;\n      case \"all-clear\":\n        this.clearMemory();\n        break;\n      case \"clear\":\n        if (result !== \"\"){\n          newExpression = \"\";\n        } else {\n          newExpression = expression.replace(/([^\\w]|\\w+|sqrt\\()$/, \"\");\n        }\n        this.updateCursorIndex(newExpression.length);\n        this.updateExpression(newExpression)\n        break;\n      case \"evaluate\":\n        if (result === \"\"){\n          this.executeExpression();\n        } else {\n          newExpression = result.toString();\n          this.updateCursorIndex(newExpression.length);\n          this.updateExpression(newExpression);\n        }\n        break;\n      case \"alt\":\n        this.toggleMenu();\n        break;\n      case \"menu\":\n        this.toggleMenu();\n        break;\n      case \"sqrt\":\n        if (result === \"\"){\n          newExpression = expression + buttonText + \"(\";\n        } else {\n          newExpression = buttonText + \"(\" + result + \")\";\n        }\n        this.updateCursorIndex(newExpression.length)\n        this.updateExpression(newExpression)\n        break;\n      case \"left-parenthesis\":\n        if (result === \"\"){\n          newExpression = expression + buttonText;\n        } else {\n          newExpression = buttonText + result;\n        }\n        this.updateCursorIndex(newExpression.length)\n        this.updateExpression(newExpression)\n        break;\n      case \"add\": //intentional fall-through\n      case \"subtract\":\n      case \"multiply\":\n      case \"divide\":\n      case \"exponential\":\n        if(result === \"\"){\n          newExpression = expression + buttonText;\n        } else {\n          newExpression = result + buttonText;\n        }\n        this.updateCursorIndex(newExpression.length)\n        this.updateExpression(newExpression)\n        break;\n      default:\n        if(result === \"\"){\n          newExpression = expression + buttonText;\n        } else {\n          newExpression = buttonText;\n        }\n        this.updateCursorIndex(newExpression.length)\n        this.updateExpression(newExpression)\n        break;\n    }\n  }\n\n  handleFocusedInput(event){\n    this.updateExpression(event.target.value);\n  }\n\n  handleUnfocusedInput(event){\n    const key = event.key;\n    let { \n      calculation: { result },\n      isInputUnfocused,\n      isTooltipToggled\n    } = this.state;\n\n    if(!isTooltipToggled){\n      if (key === \"Enter\") {\n        if (result === \"\"){\n            if(\"activeElement\" in document){\n              document.activeElement.blur();\n            }\n            this.executeExpression();\n        } else {\n          const resultStr = result.toString();\n          this.updateCursorIndex(resultStr.length);\n          this.updateExpression(resultStr);\n        }\n      }\n      else if (shouldCaptureKey(key) && isInputUnfocused){\n        let {calculation: {expression}, cursorIndex} = this.state;\n        let newExpression = \"\";\n\n        switch(key){\n          case \"Backspace\":\n            if (result !== \"\"){\n              this.updateCursorIndex(0);\n              this.updateExpression(\"\");\n            }\n            else if (cursorIndex !== 0){\n              newExpression = expression.slice(0, cursorIndex - 1) + expression.slice(cursorIndex);\n              this.updateCursorIndex(cursorIndex - 1);\n              this.updateExpression(newExpression);\n            }\n            break;\n          case \"Delete\":\n            if (result !== \"\"){\n              this.updateCursorIndex(0);\n              this.updateExpression(\"\");\n            }\n            else if (cursorIndex !== expression.length){\n              newExpression = expression.slice(0, cursorIndex) + expression.slice(cursorIndex+1);\n              this.updateExpression(newExpression);\n            }\n            break;\n          case \"ArrowLeft\":\n            if (cursorIndex > 0){\n              this.updateCursorIndex(cursorIndex - 1);\n            }\n            this.updateExpression(expression);\n            break;\n          case \"ArrowRight\":\n            if (cursorIndex < expression.length){\n              this.updateCursorIndex(cursorIndex + 1);\n            }\n            this.updateExpression(expression);\n            break;\n          case \"Home\":\n            this.updateCursorIndex(0);\n            this.updateExpression(expression);\n            break;\n          case \"End\":\n            this.updateCursorIndex(expression.length);\n            this.updateExpression(expression);\n            break;\n          default:\n            if(result === \"\"){\n              newExpression = expression.slice(0, cursorIndex) + key + expression.slice(cursorIndex)\n              this.updateCursorIndex(cursorIndex + 1);\n              this.updateExpression(newExpression);\n            }\n            else {\n              const numList = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"];\n              if (numList.includes(key)){\n                this.updateCursorIndex(1);\n                this.updateExpression(key);\n              } else {\n                const resultStr = result.toString();\n                newExpression = resultStr + key;\n                this.updateCursorIndex(newExpression.length);\n                this.updateExpression(newExpression);\n              }\n            }\n            break;\n        }\n      }\n    }\n  }\n\n  restorePrevious(expression){\n    this.updateCursorIndex(expression.length);\n    this.updateExpression(expression);\n  }\n\n  setMobile(mediaQuery){\n    if(mediaQuery.matches){\n      this.setState({isMobile: true});\n    } else {\n      this.setState({isMobile: false});\n    }\n  }\n\n  submitResult(result){\n    this.setState(prevState => {\n      const oldCalculation = prevState.calculation;\n      const calculationUpdate = {\n        isMalformed: false,\n        result\n      };\n\n      const newCalculation = Object.assign({}, oldCalculation, calculationUpdate);\n\n      return {calculation: newCalculation};\n    });\n    this.updateHistory();\n  }\n\n  toggleMenu(){\n    this.setState(prevState => ({\n      altMenuToggled: !prevState.altMenuToggled\n    }));\n  }\n\n  toggleTooltip(){\n    this.setState(prevState => ({\n      isTooltipToggled: !prevState.isTooltipToggled\n    }));\n  }\n\n  throwMalformedError(){\n    this.setState(prevState => {\n      const oldCalculation = prevState.calculation;\n      const calculationUpdate = {\n        isMalformed: true\n      };\n\n      const newCalculation = Object.assign({}, oldCalculation, calculationUpdate);\n\n      return {calculation: newCalculation};\n    });\n  }\n\n  updateCursorIndex(cursorIndex){\n    this.setState({cursorIndex});\n  }\n\n  updateExpression(expression){\n    this.setState({\n      calculation: {\n        expression,\n        isMalformed: false,\n        result: \"\"\n      }\n    });\n  }\n\n  updateFocus(event){\n    this.setState(prevState => ({\n      cursorIndex: event.target.selectionStart,\n      isInputUnfocused: !prevState.isInputUnfocused\n    }));\n  }\n\n  updateHistory(){\n    this.setState(prevState => {\n      const { \n        calculation: { expression, result },\n        calculationCount,\n        history\n      } = prevState;\n\n      const newHistory = [...history];\n      newHistory.push({\n        id: calculationCount + 1,\n        expression: expression,\n        result: result\n      });\n\n      if(newHistory.length > 20){\n        newHistory.shift();\n      }\n\n      return {history: newHistory, calculationCount: calculationCount + 1};\n    })\n  }\n\n  updateVariables(variables){\n    this.setState({variables});\n  }\n  \n\n  render() {\n    const { \n      altMenuToggled, \n      calculation, \n      cursorIndex, \n      history, \n      isInputUnfocused, \n      isMobile,\n      isTooltipToggled\n    } = this.state;\n    const expression = calculation.expression;\n\n    return (\n      <main id=\"calculator\" >\n        {isTooltipToggled && <Tooltip toggleTooltip={this.toggleTooltip}/> }\n\n        <Display \n          calculation={calculation}\n          cursorIndex={cursorIndex}\n          isInputUnfocused={isInputUnfocused}\n          handleChange={this.handleFocusedInput}\n          restorePrevious={this.restorePrevious}\n          toggleTooltip={this.toggleTooltip}\n          updateFocus={this.updateFocus}\n          />\n        \n        <History \n          altMenuToggled={altMenuToggled}\n          history={history}\n          isMobile={isMobile}\n          restorePrevious={this.restorePrevious}\n        />\n\n        <ButtonContainer \n          altMenuToggled={altMenuToggled}\n          expression={expression}\n          isMobile={isMobile}\n          sendButtonPress={this.handleButtonPress}\n        />\n      </main>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}