{"version":3,"sources":["InputContainer.js","Display.js","History.js","ButtonContainer.js","App.js","index.js"],"names":["InputContainer","props","cursorIndex","expression","handleChange","isInputUnfocused","input","updateFocus","style","type","id","value","onChange","onFocus","onBlur","displayInput","unfocusedInput","beforeCursor","slice","afterCursor","displayUnfocusedInput","Display","calculation","isMalformed","result","restorePrevious","resultDisplay","roundedResult","round","toString","className","onClick","resultStr","displayResult","History","altMenuToggled","history","isMobile","useEffect","scrollToBottom","findCalculationById","calculationId","numId","parseInt","filter","historyContainer","document","getElementById","scrollTop","scrollHeight","restoreExpression","event","target","attributes","nodeValue","replace","error","console","restoreResult","previousCalculations","map","classNames","data-id","displayCalculation","DESKTOP_BUTTONS","MOBILE_MENU_BUTTONS","MOBILE_ALT_MENU_BUTTONS","ButtonContainer","sendButtonPress","buttons","getButtons","gridClass","getButtonGridClass","getContainerHeight","Object","keys","buttonId","hasOwnProperty","buttonText","displayText","aria-hidden","button-text","e","displayButtons","DEFAULT_CALCULATION","App","state","calculationCount","variables","handleButtonPress","bind","handleFocusedInput","handleUnfocusedInput","setMobile","addEventListener","this","mediaQuery","window","matchMedia","removeEventListener","setState","variablesAfter","assign","evaluate","obj1","obj2","obj1Keys","obj2Keys","length","objKey","isDifferent","updateVariables","submitResult","throwMalformedError","prevState","pop","newExpression","getPreviousCalculation","clearMemory","updateCursorIndex","updateExpression","executeExpression","toggleMenu","key","blur","includes","shouldCaptureKey","matches","oldCalculation","calculationUpdate","updateHistory","selectionStart","newHistory","push","shift","React","Component","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.10e6a9e3.chunk.js","sourcesContent":["import \"./InputContainer.scss\";\n\nexport function InputContainer(props){\n    const { \n        cursorIndex, \n        expression, \n        handleChange,\n        isInputUnfocused,\n        updateFocus \n    } = props;\n\n    function displayInput(expression, isInputUnfocused, \n                          handleChange, updateFocus){\n        const style = {};\n\n        if (isInputUnfocused){\n            style[\"opacity\"] = 0;\n        }\n\n        return (\n            <input \n                style={style}\n                type=\"text\" \n                id=\"input\"\n                value={expression} \n                onChange={handleChange} \n                onFocus={updateFocus}\n                onBlur={updateFocus}\n            />\n        );\n    }\n\n    function displayUnfocusedInput(expression, cursorIndex){\n            \n            const beforeCursor = expression.slice(0, cursorIndex);\n            const afterCursor = expression.slice(cursorIndex);\n\n        return (\n            <div id=\"unfocused-input-display\">\n                <pre>\n                    {beforeCursor}\n                    <span id=\"cursor\">|</span>\n                    {afterCursor}\n                </pre>\n            </div>\n        );\n    }\n\n    const input = displayInput(expression, isInputUnfocused, \n                               handleChange, updateFocus);\n    const unfocusedInput = displayUnfocusedInput(expression, cursorIndex);\n\n    return (\n        <div id=\"input-container\">\n            {input}\n            {isInputUnfocused && unfocusedInput}\n        </div>\n    );\n}\n\nexport default InputContainer;","import { round } from \"mathjs\";\nimport './Display.scss';\nimport InputContainer from \"./InputContainer\";\n\nexport function Display(props){\n    const { expression, isMalformed, result } = props.calculation;\n    const { \n        isInputUnfocused, \n        cursorIndex, \n        handleChange, \n        restorePrevious,\n        updateFocus\n    } = props;\n\n    function displayResult(expression, result){\n        const roundedResult = round(result, 4).toString();\n\n        function restoreExpression(){\n            restorePrevious(expression);\n        }\n\n        function restoreResult(){\n            const resultStr = result.toString();\n            restorePrevious(resultStr);\n        }\n\n        return (\n            <div className=\"result-container\">\n                <div className=\"expression\" onClick={restoreExpression}><p>{expression}</p></div>\n                <div className=\"equals\">=</div>\n                <div className=\"result\" onClick={restoreResult}><p>{roundedResult}</p></div>\n            </div>\n        );\n    }\n\n    const resultDisplay = displayResult(expression, result);\n\n    return (\n        <div id=\"display\">\n            <p id=\"display-title\">Display</p>\n            {result === \"\" && \n                <InputContainer \n                    cursorIndex={cursorIndex}\n                    expression={expression}\n                    isInputUnfocused={isInputUnfocused}\n                    isMalformed={isMalformed}\n                    handleChange={handleChange}\n                    updateFocus={updateFocus}\n                 />\n            }\n            {isMalformed && <pre id=\"malformed-expression\">Malformed expression</pre>}\n            {result !== \"\" && resultDisplay}\n        </div>\n    );\n}\n\nexport default Display;","import React, { useEffect } from \"react\";\nimport { round } from \"mathjs\";\nimport \"./History.scss\";\n\nexport function History(props) {\n  const { altMenuToggled, history, isMobile, restorePrevious } = props;\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [history]);\n\n  const displayCalculation = ({id, expression, result}, isMobile) => {\n    const roundedResult = round(result, 4).toString();\n    let classNames = \"result-container\"\n\n    if(isMobile){\n      classNames += \" result-container-mobile\"\n    } else {\n      classNames += \" result-container-desktop\"\n    }\n\n    return (\n        <div className={classNames} data-id={\"calculation\"+id} key={id}>\n            <div className=\"expression\" data-id={\"calculation\"+id} onClick={restoreExpression}><p data-id={\"calculation\"+id}>{expression}</p></div>\n            <div className=\"equals\">=</div>\n            <div className=\"result\" data-id={\"calculation\"+id} onClick={restoreResult}><p data-id={\"calculation\"+id}>{roundedResult}</p></div>\n        </div>\n    );\n  }\n\n  const findCalculationById = (calculationId) => {\n    const numId = parseInt(calculationId, 10);\n    const calculation = history.filter(({ id }) => numId === id);\n    return calculation[0];\n  }\n\n  const scrollToBottom = () => {\n    const historyContainer = document.getElementById(\"history-container\");\n    historyContainer.scrollTop = historyContainer.scrollHeight;\n  }\n\n  const restoreExpression = (event) => {\n    let id = event.target.attributes[\"data-id\"].nodeValue.replace(\"calculation\", \"\");\n    \n    try {\n      const { expression } = findCalculationById(id);\n      restorePrevious(expression);\n    }\n    catch(error) {\n      console.error(error);\n    }\n  }\n\n  const restoreResult = (event) => {\n    let id = event.target.attributes[\"data-id\"].nodeValue.replace(\"calculation\", \"\");\n\n    try {\n      const { result } = findCalculationById(id)\n      restorePrevious(result.toString());\n    }\n    catch(error) {\n      console.error(error);\n    }\n  }\n\n  const previousCalculations = history.map((calculation) => displayCalculation(calculation, isMobile));\n\n  const style = {};\n\n  if(!isMobile){\n    style[\"order\"] = \"-1\";\n    style[\"height\"] = \"20%\";\n  } else if(altMenuToggled) {\n    style[\"order\"] = \"2\";\n    style[\"height\"] = \"38.4%\";\n  } else {\n    style[\"display\"] = \"none\";\n  }\n\n  return (\n    <div id=\"history-container\" style={style}>\n      {previousCalculations}\n    </div>\n  );\n}\n\nexport default History;","import \"./ButtonContainer.scss\";\n\nconst DESKTOP_BUTTONS = {\n  \"zero\": \"0\",\n  \"one\": \"1\",\n  \"two\": \"2\",\n  \"three\": \"3\",\n  \"four\": \"4\",\n  \"five\": \"5\",\n  \"six\": \"6\",\n  \"seven\": \"7\",\n  \"eight\": \"8\",\n  \"nine\": \"9\",\n  \"decimal\": \".\",\n  \"add\": \"+\",\n  \"subtract\": \"-\",\n  \"divide\": \"/\",\n  \"multiply\": \"*\",\n  \"back\": \"Back\",\n  \"clear\": \"C\",\n  \"left-parenthesis\": \"(\",\n  \"right-parenthesis\": \")\",\n  \"exponential\": \"^\",\n  \"sqrt\": \"sqrt\",\n  \"equals\": \"=\",\n  \"evaluate\": \"Evaluate\"\n}\n\nconst MOBILE_MENU_BUTTONS = {\n    \"zero\": \"0\",\n    \"one\": \"1\",\n    \"two\": \"2\",\n    \"three\": \"3\",\n    \"four\": \"4\",\n    \"five\": \"5\",\n    \"six\": \"6\",\n    \"seven\": \"7\",\n    \"eight\": \"8\",\n    \"nine\": \"9\",\n    \"decimal\": \".\",\n    \"add\": \"+\",\n    \"subtract\": \"-\",\n    \"divide\": \"/\",\n    \"multiply\": \"*\",\n    \"clear\": \"C\",\n    \"back\": \"Back\",\n    \"exponential\": \"^\",\n    \"equals\": \"=\",\n    \"evaluate\": \"Evaluate\",\n    \"alt\": \"alt\",\n}\n\nconst MOBILE_ALT_MENU_BUTTONS = {\n  \"evaluate\": \"Evaluate\",\n  \"menu\": \"menu\",\n  \"left-parenthesis\": \"(\",\n  \"right-parenthesis\": \")\",\n  \"sqrt\": \"sqrt\",\n  \"u\": \"u\",\n  \"v\": \"v\",\n  \"x\": \"x\",\n  \"y\": \"z\"\n}\n\n\nexport function ButtonContainer(props) {\n  const { altMenuToggled, expression, isMobile, sendButtonPress } = props;\n\n  const getButtons = (altMenuToggled, isMobile) => {\n    if(!isMobile){\n      return DESKTOP_BUTTONS;\n    } else if (altMenuToggled) {\n      return MOBILE_ALT_MENU_BUTTONS;\n    } else {\n      return MOBILE_MENU_BUTTONS;\n    }\n  }\n\n  const getButtonGridClass = (altMenuToggled, isMobile) => {\n    if(!isMobile){\n      return 'desktop-grid';\n    } else if (altMenuToggled) {\n      return 'mobile-alt-menu-grid';\n    } else {\n      return 'mobile-menu-grid';\n    }\n  };\n\n  const getContainerHeight = (altMenuToggled, isMobile) => {\n    if(!isMobile){\n      return '60%';\n    } else if (altMenuToggled) {\n      return '41.6%';\n    } else {\n      return '80%';\n    }\n  };\n\n  const displayButtons = (buttons) => {\n    const buttonIds = Object.keys(buttons);\n\n    return buttonIds.map(buttonId => {\n        if(buttons.hasOwnProperty(buttonId)){\n          let buttonText = buttons[buttonId];\n          let displayText = \"\";\n\n          if(buttonId === \"clear\" && expression === \"\"){\n            buttonId = \"all-clear\";\n            buttonText = \"AC\";\n          }\n\n          switch(buttonId) {\n            case \"divide\":\n              displayText = <>&#247;</>;\n              break;\n            case \"multiply\":\n              displayText = <>&times;</>;\n              break;\n            case \"subtract\":\n              displayText = <>&minus;</>;\n              break;\n            case \"equals\":\n              displayText = <>&#8332;</>;\n              break;\n            case \"exponential\":\n              displayText = <><pre>x<sup>n</sup></pre></>;\n              break;\n            case \"sqrt\":\n              displayText = <>&radic;</>;\n              break;\n            case \"back\":\n              displayText = <i className=\"fa fa-long-arrow-left\" aria-hidden=\"true\"></i>;\n              break;\n            case \"all-clear\":\n              displayText = <i className=\"fa fa-trash-o\" aria-hidden=\"true\"></i>;\n              break;\n            default:\n              displayText = buttonText;\n              break;\n          }\n\n          return (\n            <button \n              className=\"calculatorButton\"\n              id={buttonId} \n              key={buttonId}\n              button-text={buttonText}\n              onClick={(e) => sendButtonPress(buttonId, buttonText)}>\n                {displayText}\n              </button>\n          );\n        }\n\n        return null;\n      });\n  };\n\n  const buttons = getButtons(altMenuToggled, isMobile);\n  const style = {};\n  const gridClass = getButtonGridClass(altMenuToggled, isMobile);\n  style[\"height\"] = getContainerHeight(altMenuToggled, isMobile);\n\n  return (\n    <div className={\"button-container \" + gridClass} style={style}>\n      {displayButtons(buttons)}\n    </div>\n  );\n}\n\nexport default ButtonContainer;","import React from \"react\";\nimport { evaluate } from 'mathjs';\nimport './App.scss';\nimport Display from './Display';\nimport History from './History';\nimport ButtonContainer from './ButtonContainer';\n\nconst DEFAULT_CALCULATION = {\n  expression: \"\",\n  isMalformed: false,\n  result: \"\"\n}\n\nconst isDifferent = (obj1, obj2) => {\n  const obj1Keys = Object.keys(obj1);\n  const obj2Keys = Object.keys(obj2);\n\n  if (obj1Keys.length !== obj2Keys.length) {\n    return true;\n  }\n\n  for (let objKey of obj1Keys) {\n    if (obj1[objKey] !== obj2[objKey]) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nconst shouldCaptureKey = (key) => {\n  const ignoreList = [\"Shift\", \"CapsLock\", \"Control\", \"Alt\", \"Tab\", \"F1\",\n  \"F2\", \"F3\", \"F4\", \"F5\", \"F6\", \"F7\", \"F8\", \"F9\", \"F10\",\n  \"F11\", \"F12\", \"Insert\", \"PageDown\", \"PageUp\", \"Pause\", \"ScrollLock\", \"NumLock\", \"Escape\",\n  \"ArrowDown\", \"ArrowUp\"];\n\n  return !ignoreList.includes(key);\n}\n\n\nclass App extends React.Component {\n  constructor(){\n    super();\n    this.state = {\n      altMenuToggled: false,\n      calculation: DEFAULT_CALCULATION,\n      calculationCount: 0,\n      cursorIndex: 0,\n      history: [],\n      isInputUnfocused: true,\n      isMobile: false,\n      variables: {},\n    };\n\n    this.handleButtonPress = this.handleButtonPress.bind(this);\n    this.handleFocusedInput = this.handleFocusedInput.bind(this);\n    this.handleUnfocusedInput = this.handleUnfocusedInput.bind(this);\n    this.restorePrevious = this.restorePrevious.bind(this);\n    this.setMobile = this.setMobile.bind(this);\n    this.updateFocus = this.updateFocus.bind(this);\n  }\n\n  componentDidMount(){\n    document.addEventListener(\"keydown\", this.handleUnfocusedInput);\n    this.mediaQuery = window.matchMedia(\"(max-width: 600px)\");\n    this.setMobile(this.mediaQuery);\n    this.mediaQuery.addEventListener(\"change\", this.setMobile);\n  }\n\n  componentWillUnmount(){\n    document.removeEventListener(\"keydown\", this.handleUnfocusedInput);\n    this.mediaQuery.removeEventListener(\"change\", this.setMobile);\n  }\n\n  clearMemory(){\n    this.setState({\n      calculation: DEFAULT_CALCULATION,\n      calculationCount: 0,\n      cursorIndex: 0,\n      history: [],\n      variables: {}\n    });\n  }\n\n  executeExpression(){\n    const { calculation: {expression}, variables } = this.state;\n    let result = \"\";\n    const variablesAfter = Object.assign({}, variables);\n\n    if (expression !== \"\"){\n      try {\n        result = evaluate(expression, variablesAfter);\n        if (isDifferent(variables, variablesAfter)){\n          this.updateVariables(variablesAfter);\n        }\n        if (result !== \"\") {\n          this.submitResult(result);\n        }\n      }\n      catch (error) {\n        console.error(error);\n        this.throwMalformedError();\n      }\n    }\n  }\n\n  getPreviousCalculation(){\n    this.setState(prevState => {\n      const { calculation: { result }, history } = prevState;\n\n      if (result === \"\" && history.length !== 0){\n        let { expression, result } = history.slice().pop();\n        let newCalculation = {\n          expression,\n          isMalformed: false,\n          result\n        };\n        return {calculation: newCalculation};\n      }\n      else {\n        return {};\n      }\n\n    })\n  }\n\n  handleButtonPress(buttonId, buttonText){\n    const { calculation: { expression, result } } = this.state;\n    let newExpression = \"\";\n\n    switch(buttonId){\n      case \"back\":\n        this.getPreviousCalculation();\n        break;\n      case \"all-clear\":\n        this.clearMemory();\n        break;\n      case \"clear\":\n        if (result !== \"\"){\n          newExpression = \"\";\n        } else {\n          newExpression = expression.replace(/([^\\w]|\\w+|sqrt\\()$/, \"\");\n        }\n        this.updateCursorIndex(newExpression.length);\n        this.updateExpression(newExpression)\n        break;\n      case \"evaluate\":\n        if (result === \"\"){\n          this.executeExpression();\n        } else {\n          newExpression = result.toString();\n          this.updateCursorIndex(newExpression.length);\n          this.updateExpression(newExpression);\n        }\n        break;\n      case \"alt\":\n        this.toggleMenu();\n        break;\n      case \"menu\":\n        this.toggleMenu();\n        break;\n      case \"sqrt\":\n        if (result === \"\"){\n          newExpression = expression + buttonText + \"(\";\n        } else {\n          newExpression = buttonText + \"(\" + result + \")\";\n        }\n        this.updateCursorIndex(newExpression.length)\n        this.updateExpression(newExpression)\n        break;\n      case \"left-parenthesis\":\n        if (result === \"\"){\n          newExpression = expression + buttonText;\n        } else {\n          newExpression = buttonText + result;\n        }\n        this.updateCursorIndex(newExpression.length)\n        this.updateExpression(newExpression)\n        break;\n      case \"add\": //intentional fall-through\n      case \"subtract\":\n      case \"multiply\":\n      case \"divide\":\n      case \"exponential\":\n        if(result === \"\"){\n          newExpression = expression + buttonText;\n        } else {\n          newExpression = result + buttonText;\n        }\n        this.updateCursorIndex(newExpression.length)\n        this.updateExpression(newExpression)\n        break;\n      default:\n        if(result === \"\"){\n          newExpression = expression + buttonText;\n        } else {\n          newExpression = buttonText;\n        }\n        this.updateCursorIndex(newExpression.length)\n        this.updateExpression(newExpression)\n        break;\n    }\n  }\n\n  handleFocusedInput(event){\n    this.updateExpression(event.target.value);\n  }\n\n  handleUnfocusedInput(event){\n    const key = event.key;\n    let { calculation: { result }, isInputUnfocused } = this.state;\n\n    if (key === \"Enter\") {\n      if (result === \"\"){\n          document.getElementById(\"input\").blur();\n          this.executeExpression();\n      } else {\n        const resultStr = result.toString();\n        this.updateCursorIndex(resultStr.length);\n        this.updateExpression(resultStr);\n      }\n    }\n    else if (shouldCaptureKey(key) && isInputUnfocused){\n      let {calculation: {expression}, cursorIndex} = this.state;\n      let newExpression = \"\";\n\n      switch(key){\n        case \"Backspace\":\n          if (result !== \"\"){\n            this.updateCursorIndex(0);\n            this.updateExpression(\"\");\n          }\n          else if (cursorIndex !== 0){\n            newExpression = expression.slice(0, cursorIndex - 1) + expression.slice(cursorIndex);\n            this.updateCursorIndex(cursorIndex - 1);\n            this.updateExpression(newExpression);\n          }\n          break;\n        case \"Delete\":\n          if (cursorIndex !== expression.length){\n            newExpression = expression.slice(0, cursorIndex) + expression.slice(cursorIndex+1);\n            this.updateExpression(newExpression);\n          }\n          break;\n        case \"ArrowLeft\":\n          if (cursorIndex > 0){\n            this.updateCursorIndex(cursorIndex - 1);\n          }\n          this.updateExpression(expression);\n          break;\n        case \"ArrowRight\":\n          if (cursorIndex < expression.length){\n            this.updateCursorIndex(cursorIndex + 1);\n          }\n          this.updateExpression(expression);\n          break;\n        case \"Home\":\n          this.updateCursorIndex(0);\n          break;\n        case \"End\":\n          this.updateCursorIndex(expression.length);\n          break;\n        default:\n          if(result === \"\"){\n            newExpression = expression.slice(0, cursorIndex) + key + expression.slice(cursorIndex)\n            this.updateCursorIndex(cursorIndex + 1);\n            this.updateExpression(newExpression);\n          }\n          else {\n            const numList = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"];\n            if (numList.includes(key)){\n              this.updateCursorIndex(1);\n              this.updateExpression(key);\n            } else {\n              const resultStr = result.toString();\n              newExpression = resultStr + key;\n              this.updateCursorIndex(newExpression.length);\n              this.updateExpression(newExpression);\n            }\n          }\n          break;\n      }\n    }\n  }\n\n  restorePrevious(expression){\n    this.updateCursorIndex(expression.length);\n    this.updateExpression(expression);\n  }\n\n  setMobile(mediaQuery){\n    if(mediaQuery.matches){\n      this.setState({isMobile: true});\n    } else {\n      this.setState({isMobile: false});\n    }\n  }\n\n  submitResult(result){\n    this.setState(prevState => {\n      const oldCalculation = prevState.calculation;\n      const calculationUpdate = {\n        isMalformed: false,\n        result\n      };\n\n      const newCalculation = Object.assign({}, oldCalculation, calculationUpdate);\n\n      return {calculation: newCalculation};\n    });\n    this.updateHistory();\n  }\n\n  toggleMenu(){\n    this.setState(prevState => ({\n      altMenuToggled: !prevState.altMenuToggled\n    }));\n  }\n\n  throwMalformedError(){\n    this.setState(prevState => {\n      const oldCalculation = prevState.calculation;\n      const calculationUpdate = {\n        isMalformed: true\n      };\n\n      const newCalculation = Object.assign({}, oldCalculation, calculationUpdate);\n\n      return {calculation: newCalculation};\n    });\n  }\n\n  updateCursorIndex(cursorIndex){\n    this.setState({cursorIndex});\n  }\n\n  updateExpression(expression){\n    this.setState({\n      calculation: {\n        expression,\n        isMalformed: false,\n        result: \"\"\n      }\n    });\n  }\n\n  updateFocus(event){\n    this.setState(prevState => ({\n      cursorIndex: event.target.selectionStart,\n      isInputUnfocused: !prevState.isInputUnfocused\n    }));\n  }\n\n  updateHistory(){\n    this.setState(prevState => {\n      const { \n        calculation: { expression, result },\n        calculationCount,\n        history\n      } = prevState;\n\n      const newHistory = [...history];\n      newHistory.push({\n        id: calculationCount + 1,\n        expression: expression,\n        result: result\n      });\n\n      if(newHistory.length > 20){\n        newHistory.shift();\n      }\n\n      return {history: newHistory, calculationCount: calculationCount + 1};\n    })\n  }\n\n  updateVariables(variables){\n    this.setState({variables});\n  }\n  \n\n  render() {\n    const { \n      altMenuToggled, \n      calculation, \n      cursorIndex, \n      history, \n      isInputUnfocused, \n      isMobile\n    } = this.state;\n    const expression = calculation.expression;\n\n    // TODO: Implement other components\n    return (\n      <main id=\"calculator\">\n        <Display \n          calculation={calculation}\n          cursorIndex={cursorIndex}\n          isInputUnfocused={isInputUnfocused}\n          handleChange={this.handleFocusedInput}\n          restorePrevious={this.restorePrevious}\n          updateFocus={this.updateFocus}\n          />\n        \n        <History \n          altMenuToggled={altMenuToggled}\n          history={history}\n          isMobile={isMobile}\n          restorePrevious={this.restorePrevious}\n        />\n\n        <ButtonContainer \n          altMenuToggled={altMenuToggled}\n          expression={expression}\n          isMobile={isMobile}\n          sendButtonPress={this.handleButtonPress}\n        />\n          \n      {/* REAL CODE */}\n        {/* When screen size greater than ... */}\n          {/* <History />\n          <Display />\n          <ButtonContainer /> */}\n        {/* When screen size less than ... */}\n          {/* When menuToggled */}\n            {/* <Display />\n            <ButtonContainer /> */}\n          {/* When !menuToggled */}\n            {/* <Display />\n            <History />\n            <ButtonContainer /> */}\n      </main>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}