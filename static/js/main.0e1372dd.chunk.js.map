{"version":3,"sources":["InputContainer.js","Display.js","App.js","index.js"],"names":["InputContainer","props","cursorIndex","expression","handleChange","isInputUnfocused","input","updateFocus","style","type","id","value","onChange","onFocus","onBlur","displayInput","unfocusedInput","beforeCursor","slice","afterCursor","displayUnfocusedInput","Display","calculation","isMalformed","result","restorePrevious","resultDisplay","onClick","displayResult","DEFAULT_CALCULATION","App","state","variables","executeExpression","bind","handleFocusedInput","handleUnfocusedInput","throwMalformedError","updateCursorIndex","updateExpression","updateResult","updateVariables","document","addEventListener","this","removeEventListener","variablesAfter","Object","assign","evaluate","obj1","obj2","obj1Keys","keys","obj2Keys","length","objKey","isDifferent","round","toString","error","console","event","target","key","getElementById","blur","includes","shouldCaptureKey","newExpression","setState","prevState","oldCalculation","selectionStart","calculationUpdate","React","Component","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.0e1372dd.chunk.js","sourcesContent":["import \"./InputContainer.scss\";\n\nexport function InputContainer(props){\n    const { \n        cursorIndex, \n        expression, \n        handleChange,\n        isInputUnfocused,\n        updateFocus \n    } = props;\n\n    function displayInput(expression, isInputUnfocused, \n                          handleChange, updateFocus){\n        const style = {};\n\n        if (isInputUnfocused){\n            style[\"opacity\"] = 0;\n        }\n\n        return (\n            <input \n                style={style}\n                type=\"text\" \n                id=\"input\"\n                value={expression} \n                onChange={handleChange} \n                onFocus={updateFocus}\n                onBlur={updateFocus}\n            />\n        );\n    }\n\n    function displayUnfocusedInput(expression, cursorIndex){\n            \n            const beforeCursor = expression.slice(0, cursorIndex);\n            const afterCursor = expression.slice(cursorIndex);\n\n        return (\n            <div id=\"unfocused-input-display\">\n                <pre>\n                    {beforeCursor}\n                    <span id=\"cursor\">|</span>\n                    {afterCursor}\n                </pre>\n            </div>\n        );\n    }\n\n    const input = displayInput(expression, isInputUnfocused, \n                               handleChange, updateFocus);\n    const unfocusedInput = displayUnfocusedInput(expression, cursorIndex);\n\n    return (\n        <div id=\"input-container\">\n            {input}\n            {isInputUnfocused && unfocusedInput}\n        </div>\n    );\n}\n\nexport default InputContainer;","import './Display.scss';\nimport InputContainer from \"./InputContainer\";\n\nexport function Display(props){\n    const { expression, isMalformed, result } = props.calculation;\n    const { isInputUnfocused, \n        cursorIndex, \n        handleChange, \n        restorePrevious,\n        updateFocus\n    } = props;\n\n\n\n\n    // TODO: Implement display result\n    function displayResult(expression, result){\n\n        function restoreExpression(){\n            restorePrevious(expression);\n        }\n\n        function restoreResult(){\n            restorePrevious(result);\n        }\n\n        return (\n            <div id=\"result-container\">\n                <div id=\"expression\" onClick={restoreExpression}>{expression}</div>\n                <div id=\"equals\">=</div>\n                <div id=\"result\" onClick={restoreResult}>{result}</div>\n            </div>\n        );\n    }\n\n    const resultDisplay = displayResult(expression, result);\n\n    return (\n        <div id=\"display\">\n            {result === \"\" && \n                <InputContainer \n                    cursorIndex={cursorIndex}\n                    expression={expression}\n                    isInputUnfocused={isInputUnfocused}\n                    isMalformed={isMalformed}\n                    handleChange={handleChange}\n                    updateFocus={updateFocus}\n                 />\n            }\n            {isMalformed && <pre id=\"malformed-expression\">Malformed expression</pre>}\n            {result !== \"\" && resultDisplay}\n        </div>\n    );\n}\n\nexport default Display;","import React from \"react\";\nimport { evaluate, round } from 'mathjs';\nimport './App.scss';\nimport Display from './Display';\n\nconst DEFAULT_CALCULATION = {\n  expression: \"\",\n  isMalformed: false,\n  result: \"\"\n}\n\nconst isDifferent = (obj1, obj2) => {\n  const obj1Keys = Object.keys(obj1);\n  const obj2Keys = Object.keys(obj2);\n\n  if (obj1Keys.length !== obj2Keys.length) {\n    return true;\n  }\n\n  for (let objKey of obj1Keys) {\n    if (obj1[objKey] !== obj2[objKey]) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nconst shouldCaptureKey = (key) => {\n  const ignoreList = [\"Shift\", \"CapsLock\", \"Control\", \"Alt\", \"Tab\", \"F1\",\n  \"F2\", \"F3\", \"F4\", \"F5\", \"F6\", \"F7\", \"F8\", \"F9\", \"F10\",\n  \"F11\", \"F12\", \"Insert\", \"PageDown\", \"PageUp\", \"Pause\", \"ScrollLock\", \"NumLock\", \"Escape\",\n  \"ArrowDown\", \"ArrowUp\"];\n\n  return !ignoreList.includes(key);\n}\n\n\nclass App extends React.Component {\n  constructor(){\n    super();\n    this.state = {\n      calculation: DEFAULT_CALCULATION,\n      cursorIndex: 0,\n      variables: {},\n      isInputUnfocused: true\n    };\n\n    this.executeExpression = this.executeExpression.bind(this);\n    this.handleFocusedInput = this.handleFocusedInput.bind(this);\n    this.handleUnfocusedInput = this.handleUnfocusedInput.bind(this);\n    this.restorePrevious = this.restorePrevious.bind(this);\n    this.throwMalformedError = this.throwMalformedError.bind(this);\n    this.updateCursorIndex = this.updateCursorIndex.bind(this);\n    this.updateExpression = this.updateExpression.bind(this);\n    this.updateFocus = this.updateFocus.bind(this);\n    this.updateResult = this.updateResult.bind(this);\n    this.updateVariables = this.updateVariables.bind(this);\n  }\n\n  componentDidMount(){\n    document.addEventListener(\"keydown\", this.handleUnfocusedInput);\n  }\n\n  componentWillUnmount(){\n    document.removeEventListener(\"keydown\", this.handleUnfocusedInput);\n  }\n\n  executeExpression(){\n    const { calculation: {expression}, variables } = this.state;\n    let result = \"\";\n    const variablesAfter = Object.assign({}, variables);\n\n    try {\n      result = evaluate(expression, variablesAfter);\n      if (isDifferent(variables, variablesAfter)){\n        this.updateVariables(variablesAfter);\n      }\n      if (result !== \"\") {\n        this.updateResult(round(result, 4).toString());\n      }\n    }\n    catch (error) {\n      console.error(error);\n      this.throwMalformedError();\n    }\n  }\n\n  handleFocusedInput(event){\n    this.updateExpression(event.target.value);\n  }\n\n  handleUnfocusedInput(event){\n    const key = event.key;\n    let { calculation: { result }, isInputUnfocused } = this.state;\n\n    if (key === \"Enter\") {\n      if (result === \"\"){\n          document.getElementById(\"input\").blur();\n          this.executeExpression();\n      } else {\n        this.updateCursorIndex(result.length);\n        this.updateExpression(result);\n      }\n    }\n    else if (shouldCaptureKey(key) && isInputUnfocused){\n      let {calculation: {expression}, cursorIndex} = this.state;\n      let newExpression = \"\";\n\n      switch(key){\n        case \"Backspace\":\n          if (result !== \"\"){\n            this.updateCursorIndex(0);\n            this.updateExpression(\"\");\n          }\n          else if (cursorIndex !== 0){\n            newExpression = expression.slice(0, cursorIndex - 1) + expression.slice(cursorIndex);\n            this.updateCursorIndex(cursorIndex - 1);\n            this.updateExpression(newExpression);\n          }\n          break;\n        case \"Delete\":\n          if (cursorIndex !== expression.length){\n            newExpression = expression.slice(0, cursorIndex) + expression.slice(cursorIndex+1);\n            this.updateExpression(newExpression);\n          }\n          break;\n        case \"ArrowLeft\":\n          if (cursorIndex > 0){\n            this.updateCursorIndex(cursorIndex - 1);\n          }\n          this.updateResult(\"\");\n          break;\n        case \"ArrowRight\":\n          if (cursorIndex < expression.length){\n            this.updateCursorIndex(cursorIndex + 1);\n          }\n          this.updateResult(\"\");\n          break;\n        case \"Home\":\n          this.updateCursorIndex(0);\n          break;\n        case \"End\":\n          this.updateCursorIndex(expression.length);\n          break;\n        default:\n          if(result === \"\"){\n            newExpression = expression.slice(0, cursorIndex) + key + expression.slice(cursorIndex)\n            this.updateCursorIndex(cursorIndex + 1);\n            this.updateExpression(newExpression);\n          }\n          else {\n            const numList = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"];\n            if (numList.includes(key)){\n              this.updateCursorIndex(1);\n              this.updateExpression(key);\n            } else {\n              newExpression = result + key;\n              this.updateCursorIndex(newExpression.length);\n              this.updateExpression(newExpression);\n            }\n          }\n          break;\n      }\n    }\n  }\n\n  restorePrevious(expression){\n    this.updateCursorIndex(expression.length);\n    this.updateExpression(expression);\n  }\n\n  throwMalformedError(){\n    this.setState(prevState => {\n      const oldCalculation = prevState.calculation;\n      const calculationUpdate = {\n        isMalformed: true\n      };\n\n      const newCalculation = Object.assign({}, oldCalculation, calculationUpdate);\n\n      return {calculation: newCalculation};\n    });\n  }\n\n  updateCursorIndex(cursorIndex){\n    this.setState({cursorIndex});\n  }\n\n  updateExpression(expression){\n    this.setState({\n      calculation: {\n        expression,\n        isMalformed: false,\n        result: \"\"\n      }\n    });\n  }\n\n  updateFocus(event){\n    this.setState(prevState => ({\n      cursorIndex: event.target.selectionStart,\n      isInputUnfocused: !prevState.isInputUnfocused\n    }));\n  }\n\n  updateResult(result){\n    // called on a successfully executed expression\n    this.setState(prevState => {\n      const oldCalculation = prevState.calculation;\n      const calculationUpdate = {\n        isMalformed: false,\n        result\n      };\n\n      const newCalculation = Object.assign({}, oldCalculation, calculationUpdate);\n\n      return {calculation: newCalculation};\n    });\n  }\n\n  updateVariables(variables){\n    this.setState({variables});\n  }\n  \n\n  render() {\n    const { calculation, cursorIndex, isInputUnfocused} = this.state;\n\n    // TODO: Implement other components\n    return (\n      <main id=\"calculator\">\n        <Display \n          calculation={calculation}\n          cursorIndex={cursorIndex}\n          isInputUnfocused={isInputUnfocused}\n          handleChange={this.handleFocusedInput}\n          restorePrevious={this.restorePrevious}\n          updateFocus={this.updateFocus}\n          />\n          \n      {/* REAL CODE */}\n        {/* When screen size greater than ... */}\n          {/* <History />\n          <Display />\n          <ButtonContainer /> */}\n        {/* When screen size less than ... */}\n          {/* When menuToggled */}\n            {/* <Display />\n            <ButtonContainer /> */}\n          {/* When !menuToggled */}\n            {/* <Display />\n            <History />\n            <ButtonContainer /> */}\n      </main>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}